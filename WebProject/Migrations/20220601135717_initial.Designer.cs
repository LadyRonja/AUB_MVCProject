// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebProject.Data;

namespace WebProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220601135717_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebProject.Models.City", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            ID = new Guid("0f3d34f5-0f4c-4561-8488-9cb025083f19"),
                            CountryID = new Guid("1977b703-ada7-4c6b-9402-d6f05d9f2c12"),
                            Name = "Los Angeles"
                        },
                        new
                        {
                            ID = new Guid("544b6d6c-9a82-4b8c-9e82-db46606fb06a"),
                            CountryID = new Guid("1977b703-ada7-4c6b-9402-d6f05d9f2c12"),
                            Name = "Chicago"
                        },
                        new
                        {
                            ID = new Guid("25cb535d-bbe1-4277-a826-402ea33b6602"),
                            CountryID = new Guid("1977b703-ada7-4c6b-9402-d6f05d9f2c12"),
                            Name = "Springfield"
                        },
                        new
                        {
                            ID = new Guid("437fca0c-324f-41d3-853c-ab143a7d9c14"),
                            CountryID = new Guid("d91e0afc-5d81-4a7a-9230-ea07f9acf45a"),
                            Name = "Dreamland"
                        },
                        new
                        {
                            ID = new Guid("96abf55e-3257-4a13-920a-dcf6e0d90cd5"),
                            CountryID = new Guid("808a370a-9de2-41b7-83d7-57ad76b26719"),
                            Name = "Borås"
                        },
                        new
                        {
                            ID = new Guid("c796d9df-09f5-4788-8724-e97c0006cff9"),
                            CountryID = new Guid("1977b703-ada7-4c6b-9402-d6f05d9f2c12"),
                            Name = "Albuquerque"
                        });
                });

            modelBuilder.Entity("WebProject.Models.Country", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            ID = new Guid("808a370a-9de2-41b7-83d7-57ad76b26719"),
                            Name = "Sweden"
                        },
                        new
                        {
                            ID = new Guid("d91e0afc-5d81-4a7a-9230-ea07f9acf45a"),
                            Name = "Germany"
                        },
                        new
                        {
                            ID = new Guid("1977b703-ada7-4c6b-9402-d6f05d9f2c12"),
                            Name = "USA"
                        });
                });

            modelBuilder.Entity("WebProject.Models.Language", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            ID = new Guid("e91c6fbb-472e-4776-a47b-3d3683cc2320"),
                            Name = "English"
                        },
                        new
                        {
                            ID = new Guid("93856c53-5513-4a6c-8a77-7c961bfab4bb"),
                            Name = "Swedish"
                        },
                        new
                        {
                            ID = new Guid("7a33a7d4-3967-418b-b593-ba4e89fa26c9"),
                            Name = "German"
                        },
                        new
                        {
                            ID = new Guid("6b6cb417-e1ec-4b3b-ab87-4d660456b696"),
                            Name = "C#"
                        });
                });

            modelBuilder.Entity("WebProject.Models.LanguagePerson", b =>
                {
                    b.Property<Guid>("LanguageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LanguageID", "PersonID");

                    b.HasIndex("PersonID");

                    b.ToTable("LanguageSpeakers");

                    b.HasData(
                        new
                        {
                            LanguageID = new Guid("e91c6fbb-472e-4776-a47b-3d3683cc2320"),
                            PersonID = new Guid("44e00435-f865-4162-ba90-167446fe49a8")
                        },
                        new
                        {
                            LanguageID = new Guid("e91c6fbb-472e-4776-a47b-3d3683cc2320"),
                            PersonID = new Guid("800ee376-e910-45d4-9441-b87d031f4aa1")
                        },
                        new
                        {
                            LanguageID = new Guid("e91c6fbb-472e-4776-a47b-3d3683cc2320"),
                            PersonID = new Guid("b5a2fb0c-054a-4366-87b4-cc462b0b4ff8")
                        },
                        new
                        {
                            LanguageID = new Guid("7a33a7d4-3967-418b-b593-ba4e89fa26c9"),
                            PersonID = new Guid("9ee65d68-80f5-4945-819d-b74029aba764")
                        },
                        new
                        {
                            LanguageID = new Guid("6b6cb417-e1ec-4b3b-ab87-4d660456b696"),
                            PersonID = new Guid("9ee65d68-80f5-4945-819d-b74029aba764")
                        },
                        new
                        {
                            LanguageID = new Guid("e91c6fbb-472e-4776-a47b-3d3683cc2320"),
                            PersonID = new Guid("173221c4-7d98-400f-8ef3-e0c5977abd4c")
                        },
                        new
                        {
                            LanguageID = new Guid("7a33a7d4-3967-418b-b593-ba4e89fa26c9"),
                            PersonID = new Guid("173221c4-7d98-400f-8ef3-e0c5977abd4c")
                        },
                        new
                        {
                            LanguageID = new Guid("93856c53-5513-4a6c-8a77-7c961bfab4bb"),
                            PersonID = new Guid("173221c4-7d98-400f-8ef3-e0c5977abd4c")
                        },
                        new
                        {
                            LanguageID = new Guid("e91c6fbb-472e-4776-a47b-3d3683cc2320"),
                            PersonID = new Guid("30161aef-c5c4-4bb2-94b3-4a0a1a88441b")
                        });
                });

            modelBuilder.Entity("WebProject.Models.Person", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            ID = new Guid("44e00435-f865-4162-ba90-167446fe49a8"),
                            CityID = new Guid("0f3d34f5-0f4c-4561-8488-9cb025083f19"),
                            Name = "Jane Doe",
                            PhoneNumber = "555-123 45"
                        },
                        new
                        {
                            ID = new Guid("800ee376-e910-45d4-9441-b87d031f4aa1"),
                            CityID = new Guid("544b6d6c-9a82-4b8c-9e82-db46606fb06a"),
                            Name = "John Doe",
                            PhoneNumber = "555-123 45"
                        },
                        new
                        {
                            ID = new Guid("b5a2fb0c-054a-4366-87b4-cc462b0b4ff8"),
                            CityID = new Guid("25cb535d-bbe1-4277-a826-402ea33b6602"),
                            Name = "Marge Simpson",
                            PhoneNumber = "939-555-0113"
                        },
                        new
                        {
                            ID = new Guid("9ee65d68-80f5-4945-819d-b74029aba764"),
                            CityID = new Guid("437fca0c-324f-41d3-853c-ab143a7d9c14"),
                            Name = "Somna Sculpt",
                            PhoneNumber = "1-555-766728578"
                        },
                        new
                        {
                            ID = new Guid("173221c4-7d98-400f-8ef3-e0c5977abd4c"),
                            CityID = new Guid("96abf55e-3257-4a13-920a-dcf6e0d90cd5"),
                            Name = "Anthony Hopkins",
                            PhoneNumber = "555-6162"
                        },
                        new
                        {
                            ID = new Guid("30161aef-c5c4-4bb2-94b3-4a0a1a88441b"),
                            CityID = new Guid("c796d9df-09f5-4788-8724-e97c0006cff9"),
                            Name = "Saul Goodman",
                            PhoneNumber = "505-842-5662"
                        });
                });

            modelBuilder.Entity("WebProject.Models.City", b =>
                {
                    b.HasOne("WebProject.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebProject.Models.LanguagePerson", b =>
                {
                    b.HasOne("WebProject.Models.Language", "Language")
                        .WithMany("Speakers")
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProject.Models.Person", "Speaker")
                        .WithMany("Languages")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebProject.Models.Person", b =>
                {
                    b.HasOne("WebProject.Models.City", "City")
                        .WithMany("Citizens")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
